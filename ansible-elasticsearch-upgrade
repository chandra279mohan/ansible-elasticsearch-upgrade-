---
- name: Elasticsearch upgrade 
  hosts: elastic
  serial: 1
  order: inventory
  become: true
  gather_facts: true
  environment:
    http_proxy: http://cloudproxy-t.nat.bt.com:8080
    https_proxy: http://cloudproxy-t.nat.bt.com:8080

  vars_files:
    - /etc/ansible/vault-pass.yml
  vars:
    es_http_port: 61000
    es_old_version: 7.16.2
    es_new_version: 7.17.2
    elastic_user: elastic
    elastic_password: ########
    plugins_list : 
      - mapper-size
    plugin_version: 7.17.2
    elastic_home: /usr/share/elasticsearch
    elastic_config: /etc/elasticsearch
    elastic_home_backup: /opt/elasticsearch_home_backup_7.16.2
    elastic_config_backup: /opt/elasticsearch_config_backup_7.16.2
    

#add backup , proxy command's & ansible output to a file

  tasks:
 
    - name: Take backup of elasticsearch home directory
      ansible.builtin.command: cp -rp "{{elastic_home}}"  "{{elastic_home_backup}}"
      
    - name: Take backup of elasticsearch config directory
      ansible.builtin.command: cp -rp "{{elastic_config}}" "{{elastic_config_backup}}"
        
    - name: Download Elasticsearch RPM package 7.17.2
      ansible.builtin.get_url:
        url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ es_new_version }}-x86_64.rpm
        dest: /opt
        #checksum: "sha512:https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ es_new_version }}-x86_64.rpm.sha512"

    - name: Ensure elasticsearch service is running
      systemd:
        name: elasticsearch
        enabled: yes
        state: started
      register: response

    - name: disable shard allocation
      command: sudo curl -u elastic:{{ password }} -XPUT "https://{{ ansible_facts['nodename'] }}:61000/_cluster/settings?pretty" --cacert /etc/elasticsearch/elastic-certificates-ca_1.pem -H 'Content-Type:application/json' -d '{ "persistent":{ "cluster.routing.allocation.enable":"primaries"}}'
      no_log: True
      
    - name: stop non essential indexing to speed up shard recovery - no problem if return error (can be ignored)
      command: sudo curl -u elastic:{{ password }} -X POST "https://{{ ansible_facts['nodename'] }}:61000/_flush/synced?pretty" --cacert /etc/elasticsearch/elastic-certificates-ca_1.pem
      no_log: True
      
    - name: Stop service Elasticsearch, if not started
      ansible.builtin.systemd:
        name: elasticsearch
        state: stopped

    - name: upgrade elasticsearch
      ansible.builtin.yum:
        name: /opt/elasticsearch-{{ es_new_version }}-x86_64.rpm
        state: latest

    - name: list elasticsearch plugins installed
      command: 
        cmd : /usr/share/elasticsearch/bin/elasticsearch-plugin list
      #register: plugins_list
      tags:
        - es_plugin_upgrade

    - name: remove installed plugins
      command: 
        cmd: /usr/share/elasticsearch/bin/elasticsearch-plugin remove {{ item }}
      with_items:
        - "{{ plugins_list }}"
      ignore_errors: yes
      tags:
        - es_plugin_upgrade

    - name: download elasticsearch plugin
      ansible.builtin.get_url:
        url: https://artifacts.elastic.co/downloads/elasticsearch-plugins/{{ item }}/{{ item }}-{{ plugin_version }}.zip
        dest: "{{ elastic_home }}"
      with_items: 
        - "{{ plugins_list }}"
      tags:
        - es_plugin_upgrade

    - name: Install elasticsearch plugin
      command: "{{ elastic_home }}/bin/elasticsearch-plugin install file:{{ elastic_home }}/{{ item }}-{{ plugin_version }}.zip"
      loop: "{{ plugins_list }}"
      tags:
        - es_plugin_upgrade

    - name: systemctl daemon-reload
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Restart service Elasticsearch, if not started
      ansible.builtin.systemd:
        state: restarted
        name: elasticsearch
                
    - name: Make sure Elasticsearch is running before proceeding.
      wait_for:
        host: "{{ ansible_facts['nodename'] }}"
        port: "61000"
        delay: 10
        timeout: 300

    - name: enable shard allocation
      command: sudo curl -u elastic:{{ password }} -XPUT "https://{{ ansible_facts['nodename'] }}:61000/_cluster/settings?pretty" --cacert /etc/elasticsearch/elastic-certificates-ca_1.pem -H 'Content-Type:application/json' -d '{ "persistent":{ "cluster.routing.allocation.enable":null}}'
      no_log: True
      
    - name: Wait for cluster health to return to green
      command: sudo curl  -u elastic:{{ password }}  -XGET "https://{{ ansible_facts['nodename'] }}:61000/_cluster/health?pretty" --cacert /etc/elasticsearch/elastic-certificates-ca_1.pem
      register: response
      until: "'green' in response.stdout"
      retries: 50
      delay: 15
      no_log: True
      
    - name: Check nodes
      command: sudo curl  -u elastic:{{ password }}  -XGET "https://{{ ansible_facts['nodename'] }}:61000/_cat/nodes?pretty" --cacert /etc/elasticsearch/elastic-certificates-ca_1.pem
      register: nodes
      retries: 10
      delay: 15
      no_log: True
      
    - name: Elasticsearch nodes
      debug:
        var: nodes.stdout_lines
      
    - name: checking elasticsearch service status
      ansible.builtin.command: systemctl status elasticsearch
      register: result
      until: "'active (running)' in result.stdout"
      retries: 15
      delay: 15
      
    - name: Pause for 1 minute
      ansible.builtin.pause:
        minutes: 1
